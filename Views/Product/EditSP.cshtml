@model WebBanHang.Context.SanPham

@{
    ViewBag.Title = "EditSP";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm("EditSP", "Product", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div id="page-wrapper" class="form-horizontal center-block">
        <h4 class="title-page">Chỉnh sửa sản phẩm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "main-page" })
        @Html.Hidden("MaSP", Model.MaSP);
        <div class="form-group">
            @Html.LabelFor(model => model.TenSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.TenSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayCapNhat, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @if (Model.NgayCapNhat != null)
                {
                    @Html.TextBox("NgayCapNhat", Model.NgayCapNhat.Value.ToString("dd/MM/yyyy"), new {@id= "datepicker", @class = "date"})
                    @Html.ValidationMessageFor(model => model.NgayCapNhat, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ChatLieu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.ChatLieu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ChatLieu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <textarea name="MoTa">@Model.MoTa</textarea>
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HinhAnh, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                <input name="HinhAnh" type="file" />
                <span style="color: red;">@ViewBag.upload</span>
                <img src="~/Public/images/HinhAnhSanPham/@Model.HinhAnh" />
                @Html.ValidationMessageFor(model => model.HinhAnh, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SoLuongTon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.SoLuongTon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SoLuongTon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LuotXem, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.LuotXem, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuotXem, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LuotBinhChon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.LuotBinhChon, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuotBinhChon, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LuotBinhLuan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.LuotBinhLuan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LuotBinhLuan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Moi, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.Moi, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Moi, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaNCC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("MaNCC", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaNCC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaNSX, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("MaNSX", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaNSX, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaLoaiSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.DropDownList("MaLoaiSP", null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaLoaiSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DaXoa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DaXoa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DaXoa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DonGia, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-5">
                @Html.EditorFor(model => model.DonGia, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DonGia, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-5">
                <input type="submit" value="Update" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="https://cdn.tiny.cloud/1/7ky2e8hby8zin34agxb0jzjl7jghjy9xi09ho2okagq0wm5j/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>
<script>
    tinymce.init({
        selector: 'textarea',
        plugins: 'a11ychecker advcode casechange export formatpainter linkchecker autolink lists checklist media mediaembed pageembed permanentpen powerpaste table advtable tinycomments tinymcespellchecker',
        toolbar: 'a11ycheck addcomment showcomments casechange checklist code export formatpainter pageembed permanentpen table',
        toolbar_mode: 'floating',
        tinycomments_mode: 'embedded',
        tinycomments_author: 'Author name',
    });
</script>